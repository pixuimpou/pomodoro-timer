{"version":3,"sources":["alert.mp3","components/menuButton.js","components/menu.js","components/watch.js","images/tomato.svg","App.js","reportWebVitals.js","index.js"],"names":["props","className","classes","onClick","btnName","useState","setClasses","handleClick","f","clickPomodoro","clickBreak","Watch","initialTime","setInitialTime","time","setTime","play","setPlay","useSound","alertSound","alert","setAlert","playClass","setPlayClass","minutes","parseInt","seconds","useEffect","interval","stop","setInterval","clearInterval","prevTime","App","src","logo","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6MAAe,MAA0B,kC,OCA1B,WAAAA,GAEX,OACQ,qBAAKC,UAAWD,EAAME,QAASC,QAASH,EAAMG,QAA9C,SAAwDH,EAAMI,WCA3D,WAAAJ,GAAS,IAAD,EAEWK,mBAAS,CAAC,kBAAmB,aAFxC,mBAEZH,EAFY,KAEHI,EAFG,KAMbC,EAAc,SAACC,GACC,oBAAfN,EAAQ,GACPI,EAAW,CAAC,WAAY,oBAExBA,EAAW,CAAC,kBAAmB,aAGnCE,KAGJ,OACI,sBAAKP,UAAU,iBAAf,UACI,cAAC,EAAD,CAAQC,QAASA,EAAQ,GAAIE,QAAQ,WAAWD,QAAS,WAAOI,EAAYP,EAAMS,kBAClF,cAAC,EAAD,CAAQP,QAASA,EAAQ,GAAIE,QAAQ,QAAQD,QAAS,WAAQI,EAAYP,EAAMU,mBCqD7EC,EAtED,SAACX,GACX,IADqB,EAIiBK,mBAHvB,MADM,mBAIdO,EAJc,KAIDC,EAJC,OAKGR,mBAASO,GALZ,mBAKdE,EALc,KAKRC,EALQ,OAMGV,oBAAS,GANZ,mBAMdW,EANc,KAMRC,EANQ,OAOKC,YAASC,GAPd,mBAOdC,EAPc,KAOPC,EAPO,OAQahB,mBAAS,CAAC,WAAY,oBARnC,mBAQdiB,EARc,KAQHC,EARG,KAUjBC,EAAUC,SAASX,EAAO,IAC1BY,EAAUD,SAASX,EAAO,IA4C9B,OA3CIU,EAAU,KACVA,EAAO,WAAOA,IAEdE,EAAU,KACVA,EAAO,WAAOA,IAGlBC,qBAAU,WACN,IAAIC,EAAW,KA2Bf,OA1BAP,EAASQ,OAGLb,GAAQF,EAAO,GACfS,EAAa,CAAC,kBAAmB,aACjCK,EAAWE,aAAY,WAEfhB,GAAQ,IAERiB,gBACAd,GAAQ,IAIZF,GAAQ,SAAAiB,GAAQ,OAAIA,EAAW,OAEhC,OAEHT,EAAa,CAAC,WAAY,oBAC1BQ,cAAcH,IAGdd,GAAQ,GACRM,IAGG,kBAAMW,cAAcH,MAC5B,CAACZ,EAAMF,IAEVa,qBAAU,WACNZ,EAAQH,GACRS,EAASQ,SACV,CAACjB,IAGA,sBAAKX,UAAU,YAAf,UACI,cAAC,EAAD,CAAMQ,cAAe,kBAAMI,EAxDpB,OAwD8CH,WAAY,kBAAMG,EAvD3D,QAwDZ,sBAAKZ,UAAU,kBAAf,UACI,qBAAKA,UAAU,UAAf,mBAA6BuB,EAA7B,YAAwCE,KACxC,sBAAKzB,UAAU,oBAAf,UACI,qBAAKA,UAAWqB,EAAU,GAAInB,QAAS,kBAAMc,GAAQ,IAArD,kBACA,qBAAKhB,UAAWqB,EAAU,GAAInB,QAAS,kBAAMc,GAAQ,IAArD,mBACA,qBAAKhB,UAAU,YAAYE,QAAS,kBAAMY,EAAQH,IAAlD,6BCpEL,MAA0B,mCCiB1BqB,MAbf,WAEE,OACE,qCACE,mCACE,qBAAKC,IAAKC,IACV,mDAEF,cAAC,EAAD,QCASC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.379967c2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/alert.6cb1e2b7.mp3\";","export default props => {\r\n\r\n    return (\r\n            <div className={props.classes} onClick={props.onClick}>{props.btnName}</div>\r\n    )\r\n}","import { useState, useEffect } from 'react';\r\nimport Button from './menuButton';\r\n\r\nexport default props =>{\r\n\r\n    const [classes, setClasses] = useState([\"menu btn active\", \"menu btn\"]);\r\n\r\n\r\n\r\n    const handleClick = (f) => {\r\n        if(classes[0] === \"menu btn active\") {\r\n            setClasses([\"menu btn\", \"menu btn active\"]);\r\n        } else {\r\n            setClasses([\"menu btn active\", \"menu btn\"]);\r\n        }\r\n        \r\n        f()\r\n    }\r\n\r\n    return(\r\n        <div className=\"menu-container\">\r\n            <Button classes={classes[0]} btnName=\"Pomodoro\" onClick={() => {handleClick(props.clickPomodoro)}}></Button>\r\n            <Button classes={classes[1]} btnName=\"Break\" onClick={() => { handleClick(props.clickBreak) }}></Button>\r\n        </div>\r\n    )\r\n}","import { useState, useEffect } from 'react';\r\nimport useSound from 'use-sound';\r\nimport alertSound from '../alert.mp3';\r\nimport Menu from './menu';\r\n\r\nconst Watch = (props) => {\r\n    let pomodoro = 1500;\r\n    let pomodoroBreak = 300;\r\n\r\n    const [initialTime, setInitialTime] = useState(pomodoro);\r\n    const [time, setTime] = useState(initialTime);\r\n    const [play, setPlay] = useState(false);\r\n    const [alert, setAlert] = useSound(alertSound);\r\n    const [playClass, setPlayClass] = useState([\"btn play\", \"btn stop active\"]);\r\n\r\n    let minutes = parseInt(time / 60);\r\n    let seconds = parseInt(time % 60);\r\n    if (minutes < 10) {\r\n        minutes = `0${minutes}`;\r\n    }\r\n    if (seconds < 10) {\r\n        seconds = `0${seconds}`;\r\n    }\r\n\r\n    useEffect(() => {\r\n        let interval = null;\r\n        setAlert.stop();\r\n        \r\n\r\n        if (play && time > 0) {\r\n            setPlayClass([\"btn play active\", \"btn stop\"]);\r\n            interval = setInterval(() => {\r\n\r\n                if (time <= 0) {\r\n\r\n                    clearInterval();\r\n                    setPlay(false);\r\n\r\n                }\r\n\r\n                setTime(prevTime => prevTime - 1);\r\n\r\n            }, 1000)\r\n        } else {\r\n            setPlayClass([\"btn play\", \"btn stop active\"]);\r\n            clearInterval(interval);\r\n        }\r\n\r\n        if (time <= 0) {\r\n            alert();\r\n        }\r\n\r\n        return () => clearInterval(interval);\r\n    }, [play, time])\r\n\r\n    useEffect(() => {\r\n        setTime(initialTime);\r\n        setAlert.stop();\r\n    }, [initialTime])\r\n       \r\n    return (\r\n        <div className=\"container\">\r\n            <Menu clickPomodoro={() => setInitialTime(pomodoro)} clickBreak={() => setInitialTime(pomodoroBreak)}></Menu>\r\n            <div className=\"watch-container\">\r\n                <div className=\"display\">{`${minutes}:${seconds}`}</div>\r\n                <div className=\"buttons-container\">\r\n                    <div className={playClass[0]} onClick={() => setPlay(true)}>Play</div>\r\n                    <div className={playClass[1]} onClick={() => setPlay(false)}>Pause</div>\r\n                    <div className=\"btn reset\" onClick={() => setTime(initialTime)}>Reset</div>\r\n                </div>    \r\n            </div>\r\n        </div>       \r\n    )\r\n}\r\n\r\nexport default Watch;","export default __webpack_public_path__ + \"static/media/tomato.2c4e6498.svg\";","import './App.css';\r\nimport Watch from './components/watch'\r\nimport logo from './images/tomato.svg'\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <>\r\n      <header>\r\n        <img src={logo}/>\r\n        <h1>Pomodoro-Timer</h1>\r\n      </header>\r\n      <Watch></Watch>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}